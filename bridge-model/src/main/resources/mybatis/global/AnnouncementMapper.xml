<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.iware.bridge.model.dao.global.AnnouncementDao">

    <resultMap type="com.iware.bridge.model.entity.global.Announcement" id="announcementMap">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="creator" column="creator"/>
        <result property="unitId" column="unit_id"/>
        <result property="effectTime" column="effect_time"/>
        <result property="expiresTime" column="expires_time"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="modifyTime" column="modify_time"/>
    </resultMap>

    <sql id="Base_Column_List">
       id,
       title,
       content,
       create_user_id,
       creator,
       unit_id,
       effect_time,
       expires_time,
       status,
       create_time,
       modify_time
    </sql>

    <!--保存 -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id" keyColumn="id" parameterType="com.iware.bridge.model.entity.global.Announcement">
        insert into tb_announcement
        (
        create_time,
        modify_time,
        <trim prefix="" suffix="" suffixOverrides=",">
            title,
            content,
            create_user_id,
            creator,
            unit_id,
            effect_time,
            expires_time,
            status,
        </trim>
        )
        values
        (
        now(),
        now(),
        <trim prefix="" suffix="" suffixOverrides=",">
            #{title},
            #{content},
            #{createUserId},
            #{creator},
            #{unitId},
            #{effectTime},
            #{expiresTime},
            #{status},
        </trim>
        )
    </insert>

    <!-- 根据ID查询Announcement -->
    <select id="findById" parameterType="Integer" resultMap="announcementMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM
        tb_announcement
        WHERE id = #{id}
    </select>

    <!--修改 -->
    <update id="update" parameterType="com.iware.bridge.model.entity.global.Announcement">
        UPDATE
        tb_announcement
        <set>
            <trim prefix="" suffix="" suffixOverrides=",">
                modify_time = now(),
                <if test="title != null and title != ''">
                    title = #{title},
                </if>
                <if test="content != null and content != ''">
                    content = #{content},
                </if>
                <if test="createUserId != null">
                    create_user_id = #{createUserId},
                </if>
                <if test="creator != null and creator != ''">
                    creator = #{creator},
                </if>
                <if test="unitId != null">
                    unit_id = #{unitId},
                </if>
                <if test="effectTime != null">
                    effect_time = #{effectTime},
                </if>
                <if test="expiresTime != null">
                    expires_time = #{expiresTime},
                </if>
                <if test="status != null">
                    status = #{status},
                </if>
            </trim>
        </set>
        WHERE
        id = #{id}
    </update>

    <!-- 根据ID删除 -->
    <select id="deleteById" parameterType="Integer">
        DELETE
        FROM
            tb_announcement
        WHERE id = #{id}
    </select>

    <!--批量保存 -->
    <insert id="batchSave" useGeneratedKeys="true" keyProperty="id" keyColumn="id" parameterType="java.util.List">
        insert into tb_announcement
        (
        create_time,
        modify_time,
        <trim prefix="" suffix="" suffixOverrides=",">
            title,
            content,
            create_user_id,
            creator,
            unit_id,
            effect_time,
            expires_time,
            status,
        </trim>
        ) values
        <foreach collection="list" item="it" separator=",">
            (
            now(),
            now(),
            <trim prefix="" suffix="" suffixOverrides=",">
                #{it.title},
                #{it.content},
                #{it.createUserId},
                #{it.creator},
                #{it.unitId},
                #{it.effectTime},
                #{it.expiresTime},
                #{it.status},
            </trim>
            )
        </foreach>
    </insert>

    <!-- 批量删除 -->
    <delete id="batchDelete" parameterType="java.util.List">
        DELETE
        FROM
        tb_announcement
        WHERE id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 根据所有 -->
    <select id="findAll" resultMap="announcementMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM
        tb_announcement
        ORDER BY
        id DESC
    </select>

    <!-- 根据条件查询Announcement -->
    <select id="query" parameterType="com.iware.bridge.model.entity.global.Announcement" resultMap="announcementMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM
        tb_announcement
        <where>
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="title != null and title != ''">
                AND title = #{title}
            </if>
            <if test="content != null and content != ''">
                AND content = #{content}
            </if>
            <if test="createUserId != null">
                AND create_user_id = #{createUserId}
            </if>
            <if test="creator != null and creator != ''">
                AND creator = #{creator}
            </if>
            <if test="unitId != null">
                AND unit_id = #{unitId}
            </if>
            <if test="effectTime != null">
                AND effect_time = #{effectTime}
            </if>
            <if test="expiresTime != null">
                AND expires_time = #{expiresTime}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="createTime != null">
                AND create_time = #{createTime}
            </if>
            <if test="modifyTime != null">
                AND modify_time = #{modifyTime}
            </if>
        </where>
        ORDER BY
        id DESC
    </select>

    <!-- 根据条件模糊查询Announcement -->
    <select id="queryByLike" parameterType="com.iware.bridge.model.entity.global.Announcement" resultMap="announcementMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM
        tb_announcement
        <where>
            <if test="title != null and title != ''">
                AND title LIKE CONCAT ('%', #{title}, '%')
            </if>
            <if test="content != null and content != ''">
                AND content LIKE CONCAT ('%', #{content}, '%')
            </if>
            <if test="createUserId != null">
                AND create_user_id = #{createUserId}
            </if>
            <if test="creator != null and creator != ''">
                AND creator LIKE CONCAT ('%', #{creator}, '%')
            </if>
            <if test="unitId != null">
                AND unit_id = #{unitId}
            </if>
            <if test="effectTime != null">
                AND effect_time LIKE CONCAT ('%', #{effectTime}, '%')
            </if>
            <if test="expiresTime != null">
                AND expires_time LIKE CONCAT ('%', #{expiresTime}, '%')
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
        ORDER BY
        id DESC
    </select>
</mapper>
